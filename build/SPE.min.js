import * as THREE from "three";

/* shader-particle-engine 1.1.0
 * 
 * (c) 2015 Luke Moody (http://www.github.com/squarefeet)
 *     Originally based on Lee Stemkoski's original work (https://github.com/stemkoski/stemkoski.github.com/blob/master/Three.js/js/ParticleEngine.js).
 *
 * shader-particle-engine may be freely distributed under the MIT license (See LICENSE at root of this repository.)
 */
import*as THREE from"three";var SPE={distributions:{BOX:1,SPHERE:2,DISC:3,LINE:4},valueOverLifetimeLength:4};"function"==typeof define&&define.amd?define("spe",SPE):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=SPE),SPE.TypedArrayHelper=function(e,t,r,i){this.componentSize=r||1,this.size=t||1,this.TypedArrayConstructor=e||Float32Array,this.array=new e(t*this.componentSize),this.indexOffset=i||0},SPE.TypedArrayHelper.constructor=SPE.TypedArrayHelper,SPE.TypedArrayHelper.prototype.setSize=function(e,t){var r=this.array.length;return t||(e*=this.componentSize),e<r?this.shrink(e):r<e?this.grow(e):void console.info("TypedArray is already of size:",e+".","Will not resize.")},SPE.TypedArrayHelper.prototype.shrink=function(e){return this.array=this.array.subarray(0,e),this.size=e,this},SPE.TypedArrayHelper.prototype.grow=function(e){var t=this.array,r=new this.TypedArrayConstructor(e);return r.set(t),this.array=r,this.size=e,this},SPE.TypedArrayHelper.prototype.splice=function(t,r){t*=this.componentSize,r*=this.componentSize;var i=[],a=this.array,o=a.length;for(let e=0;e<o;++e)(e<t||e>=r)&&i.push(a[e]);return this.setFromArray(0,i),this},SPE.TypedArrayHelper.prototype.setFromArray=function(e,t){var r=e+t.length;return r>this.array.length?this.grow(r):r<this.array.length&&this.shrink(r),this.array.set(t,this.indexOffset+e),this},SPE.TypedArrayHelper.prototype.setVec2=function(e,t){return this.setVec2Components(e,t.x,t.y)},SPE.TypedArrayHelper.prototype.setVec2Components=function(e,t,r){var i=this.array,e=this.indexOffset+e*this.componentSize;return i[e]=t,i[e+1]=r,this},SPE.TypedArrayHelper.prototype.setVec3=function(e,t){return this.setVec3Components(e,t.x,t.y,t.z)},SPE.TypedArrayHelper.prototype.setVec3Components=function(e,t,r,i){var a=this.array,e=this.indexOffset+e*this.componentSize;return a[e]=t,a[e+1]=r,a[e+2]=i,this},SPE.TypedArrayHelper.prototype.setVec4=function(e,t){return this.setVec4Components(e,t.x,t.y,t.z,t.w)},SPE.TypedArrayHelper.prototype.setVec4Components=function(e,t,r,i,a){var o=this.array,e=this.indexOffset+e*this.componentSize;return o[e]=t,o[e+1]=r,o[e+2]=i,o[e+3]=a,this},SPE.TypedArrayHelper.prototype.setMat3=function(e,t){return this.setFromArray(this.indexOffset+e*this.componentSize,t.elements)},SPE.TypedArrayHelper.prototype.setMat4=function(e,t){return this.setFromArray(this.indexOffset+e*this.componentSize,t.elements)},SPE.TypedArrayHelper.prototype.setColor=function(e,t){return this.setVec3Components(e,t.r,t.g,t.b)},SPE.TypedArrayHelper.prototype.setNumber=function(e,t){return this.array[this.indexOffset+e*this.componentSize]=t,this},SPE.TypedArrayHelper.prototype.getValueAtIndex=function(e){return this.array[this.indexOffset+e]},SPE.TypedArrayHelper.prototype.getComponentValueAtIndex=function(e){return this.array.subarray(this.indexOffset+e*this.componentSize)},SPE.ShaderAttribute=function(e,t,r){var i=SPE.ShaderAttribute.typeSizeMap;this.type="string"==typeof e&&i.hasOwnProperty(e)?e:"f",this.componentSize=i[this.type],this.arrayType=r||Float32Array,this.typedArray=null,this.bufferAttribute=null,this.dynamicBuffer=!!t,this.updateMin=0,this.updateMax=0},SPE.ShaderAttribute.constructor=SPE.ShaderAttribute,SPE.ShaderAttribute.typeSizeMap={f:1,v2:2,v3:3,v4:4,c:3,m3:9,m4:16},SPE.ShaderAttribute.prototype.setUpdateRange=function(e,t){this.updateMin=Math.min(e*this.componentSize,this.updateMin*this.componentSize),this.updateMax=Math.max(t*this.componentSize,this.updateMax*this.componentSize)},SPE.ShaderAttribute.prototype.flagUpdate=function(){var e=this.bufferAttribute,t=e.addUpdateRange;t.offset=this.updateMin,t.count=Math.min(this.updateMax-this.updateMin+this.componentSize,this.typedArray.array.length),e.needsUpdate=!0},SPE.ShaderAttribute.prototype.resetUpdateRange=function(){this.updateMin=0,this.updateMax=0},SPE.ShaderAttribute.prototype.resetDynamic=function(){this.bufferAttribute.usage=this.dynamicBuffer?THREE.DynamicDrawUsage:THREE.StaticDrawUsage},SPE.ShaderAttribute.prototype.splice=function(e,t){this.typedArray.splice(e,t),this.forceUpdateAll()},SPE.ShaderAttribute.prototype.forceUpdateAll=function(){this.bufferAttribute.array=this.typedArray.array,this.bufferAttribute.addUpdateRange.offset=0,this.bufferAttribute.addUpdateRange.count=-1,this.bufferAttribute.usage=THREE.StaticDrawUsage,this.bufferAttribute.needsUpdate=!0},SPE.ShaderAttribute.prototype._ensureTypedArray=function(e){null!==this.typedArray&&this.typedArray.size===e*this.componentSize||(null!==this.typedArray&&this.typedArray.size!==e?this.typedArray.setSize(e):null===this.typedArray&&(this.typedArray=new SPE.TypedArrayHelper(this.arrayType,e,this.componentSize)))},SPE.ShaderAttribute.prototype._createBufferAttribute=function(e){this._ensureTypedArray(e),null!==this.bufferAttribute?(this.bufferAttribute.array=this.typedArray.array,81<=parseFloat(THREE.REVISION)&&(this.bufferAttribute.count=this.bufferAttribute.array.length/this.bufferAttribute.itemSize),this.bufferAttribute.needsUpdate=!0):(this.bufferAttribute=new THREE.BufferAttribute(this.typedArray.array,this.componentSize),this.bufferAttribute.usage=this.dynamicBuffer?THREE.DynamicDrawUsage:THREE.StaticDrawUsage)},SPE.ShaderAttribute.prototype.getLength=function(){return null===this.typedArray?0:this.typedArray.array.length},SPE.shaderChunks={defines:["#define PACKED_COLOR_SIZE 256.0","#define PACKED_COLOR_DIVISOR 255.0"].join("\n"),uniforms:["uniform float deltaTime;","uniform float runTime;","uniform sampler2D tex;","uniform vec4 textureAnimation;","uniform float scale;"].join("\n"),attributes:["attribute vec4 acceleration;","attribute vec3 velocity;","attribute vec4 rotation;","attribute vec3 rotationCenter;","attribute vec4 params;","attribute vec4 size;","attribute vec4 angle;","attribute vec4 color;","attribute vec4 opacity;"].join("\n"),varyings:["varying vec4 vColor;","#ifdef SHOULD_ROTATE_TEXTURE","    varying float vAngle;","#endif","#ifdef SHOULD_CALCULATE_SPRITE","    varying vec4 vSpriteSheet;","#endif"].join("\n"),branchAvoidanceFunctions:["float when_gt(float x, float y) {","    return max(sign(x - y), 0.0);","}","float when_lt(float x, float y) {","    return min( max(1.0 - sign(x - y), 0.0), 1.0 );","}","float when_eq( float x, float y ) {","    return 1.0 - abs( sign( x - y ) );","}","float when_ge(float x, float y) {","  return 1.0 - when_lt(x, y);","}","float when_le(float x, float y) {","  return 1.0 - when_gt(x, y);","}","float and(float a, float b) {","    return a * b;","}","float or(float a, float b) {","    return min(a + b, 1.0);","}"].join("\n"),unpackColor:["vec3 unpackColor( in float hex ) {","   vec3 c = vec3( 0.0 );","   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float b = mod( hex, PACKED_COLOR_SIZE );","   c.r = r / PACKED_COLOR_DIVISOR;","   c.g = g / PACKED_COLOR_DIVISOR;","   c.b = b / PACKED_COLOR_DIVISOR;","   return c;","}"].join("\n"),unpackRotationAxis:["vec3 unpackRotationAxis( in float hex ) {","   vec3 c = vec3( 0.0 );","   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float b = mod( hex, PACKED_COLOR_SIZE );","   c.r = r / PACKED_COLOR_DIVISOR;","   c.g = g / PACKED_COLOR_DIVISOR;","   c.b = b / PACKED_COLOR_DIVISOR;","   c *= vec3( 2.0 );","   c -= vec3( 1.0 );","   return c;","}"].join("\n"),floatOverLifetime:["float getFloatOverLifetime( in float positionInTime, in vec4 attr ) {","    const int VEC4_SIZE = 4;","    float value = 0.0;","    float deltaAge = clamp(positionInTime * float(VEC4_SIZE - 2), 0.0, float(VEC4_SIZE - 2));","","    if (deltaAge == 0.0) return attr[0];","    if (deltaAge >= float(VEC4_SIZE - 1)) return attr[VEC4_SIZE - 1];","","    for( int i = 0; i < VEC4_SIZE - 1; ++i ) {","       float fIndex = float( i );","       float shouldApplyValue = and( when_gt( deltaAge, fIndex ), when_le( deltaAge, fIndex + 1.0 ) );","       if(i <= 3) {","           value += shouldApplyValue * mix( attr[ i ], attr[ i + 1 ], deltaAge - fIndex );","       }","    }","","    return value;","}"].join("\n"),colorOverLifetime:["vec3 getColorOverLifetime( in float positionInTime, in vec3 color1, in vec3 color2, in vec3 color3, in vec3 color4 ) {","    vec3 value = vec3( 0.0 );","    value.x = getFloatOverLifetime( positionInTime, vec4( color1.x, color2.x, color3.x, color4.x ) );","    value.y = getFloatOverLifetime( positionInTime, vec4( color1.y, color2.y, color3.y, color4.y ) );","    value.z = getFloatOverLifetime( positionInTime, vec4( color1.z, color2.z, color3.z, color4.z ) );","    return value;","}"].join("\n"),paramFetchingFunctions:["float getAlive() {","   return params.x;","}","float getAge() {","   return params.y;","}","float getMaxAge() {","   return params.z;","}","float getWiggle() {","   return params.w;","}"].join("\n"),forceFetchingFunctions:["vec4 getPosition( in float age ) {","   return modelViewMatrix * vec4( position, 1.0 );","}","vec3 getVelocity( in float age ) {","   return velocity * age;","}","vec3 getAcceleration( in float age ) {","   return acceleration.xyz * age;","}"].join("\n"),rotationFunctions:["#ifdef SHOULD_ROTATE_PARTICLES","   mat4 getRotationMatrix( in vec3 axis, in float angle) {","       axis = normalize(axis);","       float s = sin(angle);","       float c = cos(angle);","       float oc = 1.0 - c;","","       return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,","                   oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,","                   oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,","                   0.0,                                0.0,                                0.0,                                1.0);","   }","","   vec3 getRotation( in vec3 pos, in float positionInTime ) {","      if( rotation.y == 0.0 ) {","           return pos;","      }","","      vec3 axis = unpackRotationAxis( rotation.x );","      vec3 center = rotationCenter;","      vec3 translated;","      mat4 rotationMatrix;","      float angle = 0.0;","      angle += when_eq( rotation.z, 0.0 ) * rotation.y;","      angle += when_gt( rotation.z, 0.0 ) * mix( 0.0, rotation.y, positionInTime );","      translated = rotationCenter - pos;","      rotationMatrix = getRotationMatrix( axis, angle );","      return center - vec3( rotationMatrix * vec4( translated, 0.0 ) );","   }","#endif"].join("\n"),rotateTexture:["    vec2 vUv = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );","","    #ifdef SHOULD_ROTATE_TEXTURE","       float x = gl_PointCoord.x - 0.5;","       float y = 1.0 - gl_PointCoord.y - 0.5;","       float c = cos( -vAngle );","       float s = sin( -vAngle );","       vUv = vec2( c * x + s * y + 0.5, c * y - s * x + 0.5 );","    #endif","","    #ifdef SHOULD_CALCULATE_SPRITE","        float framesX = vSpriteSheet.x;","        float framesY = vSpriteSheet.y;","        float columnNorm = vSpriteSheet.z;","        float rowNorm = vSpriteSheet.w;","        vUv.x = gl_PointCoord.x * framesX + columnNorm;","        vUv.y = 1.0 - (gl_PointCoord.y * framesY + rowNorm);","    #endif","","    vec4 rotatedTexture = texture2D( tex, vUv );"].join("\n")},SPE.shaders={vertex:[SPE.shaderChunks.defines,SPE.shaderChunks.uniforms,SPE.shaderChunks.attributes,SPE.shaderChunks.varyings,THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,THREE.ShaderChunk.fog_pars_vertex,SPE.shaderChunks.branchAvoidanceFunctions,SPE.shaderChunks.unpackColor,SPE.shaderChunks.unpackRotationAxis,SPE.shaderChunks.floatOverLifetime,SPE.shaderChunks.colorOverLifetime,SPE.shaderChunks.paramFetchingFunctions,SPE.shaderChunks.forceFetchingFunctions,SPE.shaderChunks.rotationFunctions,"void main() {","    highp float age = getAge();","    highp float alive = getAlive();","    highp float maxAge = getMaxAge();","    highp float positionInTime = (age / maxAge);","    highp float isAlive = when_gt( alive, 0.0 );","    #ifdef SHOULD_WIGGLE_PARTICLES","        float wiggleAmount = positionInTime * getWiggle();","        float wiggleSin = isAlive * sin( wiggleAmount );","        float wiggleCos = isAlive * cos( wiggleAmount );","    #endif","    vec3 vel = getVelocity( age );","    vec3 accel = getAcceleration( age );","    vec3 force = vec3( 0.0 );","    vec3 pos = vec3( position );","    float drag = 1.0 - (positionInTime * 0.5) * acceleration.w;","    force += vel;","    force *= drag;","    force += accel * age;","    pos += force;","    #ifdef SHOULD_WIGGLE_PARTICLES","        pos.x += wiggleSin;","        pos.y += wiggleCos;","        pos.z += wiggleSin;","    #endif","    #ifdef SHOULD_ROTATE_PARTICLES","        pos = getRotation( pos, positionInTime );","    #endif","    vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );","    highp float pointSize = getFloatOverLifetime( positionInTime, size ) * isAlive;","    #ifdef HAS_PERSPECTIVE","        float perspective = scale / length( mvPosition.xyz );","    #else","        float perspective = 1.0;","    #endif","    float pointSizePerspective = pointSize * perspective;","    #ifdef COLORIZE","       vec3 c = isAlive * getColorOverLifetime(","           positionInTime,","           unpackColor( color.x ),","           unpackColor( color.y ),","           unpackColor( color.z ),","           unpackColor( color.w )","       );","    #else","       vec3 c = vec3(1.0);","    #endif","    float o = isAlive * getFloatOverLifetime( positionInTime, opacity );","    vColor = vec4( c, o );","    #ifdef SHOULD_ROTATE_TEXTURE","        vAngle = isAlive * getFloatOverLifetime( positionInTime, angle );","    #endif","    #ifdef SHOULD_CALCULATE_SPRITE","        float framesX = textureAnimation.x;","        float framesY = textureAnimation.y;","        float loopCount = textureAnimation.w;","        float totalFrames = textureAnimation.z;","        float frameNumber = mod( (positionInTime * loopCount) * totalFrames, totalFrames );","        float column = floor(mod( frameNumber, framesX ));","        float row = floor( (frameNumber - column) / framesX );","        float columnNorm = column / framesX;","        float rowNorm = row / framesY;","        vSpriteSheet.x = 1.0 / framesX;","        vSpriteSheet.y = 1.0 / framesY;","        vSpriteSheet.z = columnNorm;","        vSpriteSheet.w = rowNorm;","    #endif","    gl_PointSize = pointSizePerspective;","    gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.fog_vertex,"}"].join("\n"),fragment:[SPE.shaderChunks.uniforms,THREE.ShaderChunk.common,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,SPE.shaderChunks.varyings,SPE.shaderChunks.branchAvoidanceFunctions,"void main() {","    vec3 outgoingLight = vColor.xyz;","    ","    #ifdef ALPHATEST","       if ( vColor.w < float(ALPHATEST) ) discard;","    #endif",SPE.shaderChunks.rotateTexture,THREE.ShaderChunk.logdepthbuf_fragment,"    outgoingLight = vColor.xyz * rotatedTexture.xyz;","    gl_FragColor = vec4( outgoingLight.xyz, rotatedTexture.w * vColor.w );",THREE.ShaderChunk.fog_fragment,"}"].join("\n")},SPE.utils={types:{BOOLEAN:"boolean",STRING:"string",NUMBER:"number",OBJECT:"object"},generateUUID:function(){function e(){return(65536|65536*Math.random()).toString(16).substr(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},ensureTypedArg:function(e,t,r){return typeof e===t?e:r},ensureArrayTypedArg:function(t,r,i){if(Array.isArray(t)){for(let e=t.length-1;0<=e;--e)if(typeof t[e]!==r)return i;return t}return this.ensureTypedArg(t,r,i)},ensureInstanceOf:function(e,t,r){return void 0!==t&&e instanceof t?e:r},ensureArrayInstanceOf:function(t,r,i){if(Array.isArray(t)){for(let e=t.length-1;0<=e;--e)if(void 0!==r&&t[e]instanceof r==!1)return i;return t}return this.ensureInstanceOf(t,r,i)},ensureValueOverLifetimeCompliance:function(e,t,r){t=t||3,r=r||3,!1===Array.isArray(e._value)&&(e._value=[e._value]),!1===Array.isArray(e._spread)&&(e._spread=[e._spread]);var i=this.clamp(e._value.length,t,r),t=this.clamp(e._spread.length,t,r),r=Math.max(i,t);e._value.length!==r&&(e._value=this.interpolateArray(e._value,r)),e._spread.length!==r&&(e._spread=this.interpolateArray(e._spread,r))},interpolateArray:function(t,r){var e=t.length,i=["function"==typeof t[0].clone?t[0].clone():t[0]],a=(e-1)/(r-1);for(let e=1;e<r-1;++e){var o=e*a,n=Math.floor(o),s=Math.ceil(o);i[e]=this.lerpTypeAgnostic(t[n],t[s],o-n)}return i.push("function"==typeof t[e-1].clone?t[e-1].clone():t[e-1]),i},clamp:function(e,t,r){return Math.max(t,Math.min(e,r))},zeroToEpsilon:function(e,t){let r=e;return r=t?1e-5*Math.random()*10:1e-5,r=e<0&&-1e-5<e?-r:r},lerpTypeAgnostic:function(e,t,r){var i=this.types;let a;return typeof e===i.NUMBER&&typeof t===i.NUMBER?e+(t-e)*r:e instanceof THREE.Vector2&&t instanceof THREE.Vector2?((a=e.clone()).x=this.lerp(e.x,t.x,r),a.y=this.lerp(e.y,t.y,r),a):e instanceof THREE.Vector3&&t instanceof THREE.Vector3?((a=e.clone()).x=this.lerp(e.x,t.x,r),a.y=this.lerp(e.y,t.y,r),a.z=this.lerp(e.z,t.z,r),a):e instanceof THREE.Vector4&&t instanceof THREE.Vector4?((a=e.clone()).x=this.lerp(e.x,t.x,r),a.y=this.lerp(e.y,t.y,r),a.z=this.lerp(e.z,t.z,r),a.w=this.lerp(e.w,t.w,r),a):e instanceof THREE.Color&&t instanceof THREE.Color?((a=e.clone()).r=this.lerp(e.r,t.r,r),a.g=this.lerp(e.g,t.g,r),a.b=this.lerp(e.b,t.b,r),a):void console.warn("Invalid argument types, or argument types do not match:",e,t)},lerp:function(e,t,r){return e+(t-e)*r},roundToNearestMultiple:function(e,t){var r;return 0===t||0==(r=Math.abs(e)%t)?e:e<0?-(Math.abs(e)-r):e+t-r},arrayValuesAreEqual:function(t){for(let e=0;e<t.length-1;++e)if(t[e]!==t[e+1])return!1;return!0},randomFloat:function(e,t){return e+t*(Math.random()-.5)},randomVector3:function(e,t,r,i,a){let o=r.x+(Math.random()*i.x-.5*i.x),n=r.y+(Math.random()*i.y-.5*i.y),s=r.z+(Math.random()*i.z-.5*i.z);a&&(o=.5*-a.x+this.roundToNearestMultiple(o,a.x),n=.5*-a.y+this.roundToNearestMultiple(n,a.y),s=.5*-a.z+this.roundToNearestMultiple(s,a.z)),e.typedArray.setVec3Components(t,o,n,s)},randomColor:function(e,t,r,i){var a=r.r+Math.random()*i.x,o=r.g+Math.random()*i.y,r=r.b+Math.random()*i.z,a=this.clamp(a,0,1),o=this.clamp(o,0,1),r=this.clamp(r,0,1);e.typedArray.setVec3Components(t,a,o,r)},randomColorAsHex:(()=>{let s=new THREE.Color;return function(e,t,r,i){var a=r.length,o=[];for(let e=0;e<a;++e){var n=i[e];s.copy(r[e]),s.r+=Math.random()*n.x-.5*n.x,s.g+=Math.random()*n.y-.5*n.y,s.b+=Math.random()*n.z-.5*n.z,s.r=this.clamp(s.r,0,1),s.g=this.clamp(s.g,0,1),s.b=this.clamp(s.b,0,1),o.push(s.getHex())}e.typedArray.setVec4Components(t,o[0],o[1],o[2],o[3])}})(),randomVector3OnLine:function(e,t,r,i){r=r.clone();r.lerp(i,Math.random()),e.typedArray.setVec3Components(t,r.x,r.y,r.z)},randomVector3OnSphere:function(e,t,r,i,a,o,n,s){var u=2*Math.random()-1,l=6.2832*Math.random(),p=Math.sqrt(1-u*u);let c=this.randomFloat(i,a);i=0;n&&(c=Math.round(c/n)*n),i=p*Math.cos(l)*c,a=p*Math.sin(l)*c,n=u*c,i=(i*=o.x)+r.x,e.typedArray.setVec3Components(t,i,a*o.y+r.y,n*o.z+r.z)},seededRandom:function(e){e=1e4*Math.sin(e);return e-(0|e)},randomVector3OnDisc:function(e,t,r,i,a,o,n){var s=6.2832*Math.random();let u=Math.abs(this.randomFloat(i,a));i=0,a=0;n&&(u=Math.round(u/n)*n),i=Math.cos(s)*u,n=Math.sin(s)*u,i=(i*=o.x)+r.x,e.typedArray.setVec3Components(t,i,n*o.y+r.y,a+=r.z)},randomDirectionVector3OnSphere:(()=>{let u=new THREE.Vector3;return function(e,t,r,i,a,o,n,s){u.copy(o),u.x-=r,u.y-=i,u.z-=a,u.normalize().multiplyScalar(-this.randomFloat(n,s)),e.typedArray.setVec3Components(t,u.x,u.y,u.z)}})(),randomDirectionVector3OnDisc:(()=>{let u=new THREE.Vector3;return function(e,t,r,i,a,o,n,s){u.copy(o),u.x-=r,u.y-=i,u.z-=a,u.normalize().multiplyScalar(-this.randomFloat(n,s)),e.typedArray.setVec3Components(t,u.x,u.y,0)}})(),getPackedRotationAxis:(()=>{let r=new THREE.Vector3,i=new THREE.Vector3,a=new THREE.Color,o=new THREE.Vector3(1,1,1);return function(e,t){return r.copy(e).normalize(),i.copy(t).normalize(),r.x+=.5*-t.x+Math.random()*t.x,r.y+=.5*-t.y+Math.random()*t.y,r.z+=.5*-t.z+Math.random()*t.z,r.normalize().add(o).multiplyScalar(.5),a.setRGB(r.x,r.y,r.z),a.getHex()}})()},SPE.Group=function(e){var t=SPE.utils,r=t.types;(e=t.ensureTypedArg(e,r.OBJECT,{})).texture=t.ensureTypedArg(e.texture,r.OBJECT,{}),this.uuid=SPE.utils.generateUUID(),this.fixedTimeStep=t.ensureTypedArg(e.fixedTimeStep,r.NUMBER,.016),this.texture=t.ensureInstanceOf(e.texture.value,THREE.Texture,null),this.textureFrames=t.ensureInstanceOf(e.texture.frames,THREE.Vector2,new THREE.Vector2(1,1)),this.textureFrameCount=t.ensureTypedArg(e.texture.frameCount,r.NUMBER,this.textureFrames.x*this.textureFrames.y),this.textureLoop=t.ensureTypedArg(e.texture.loop,r.NUMBER,1),this.textureFrames.max(new THREE.Vector2(1,1)),this.hasPerspective=t.ensureTypedArg(e.hasPerspective,r.BOOLEAN,!0),this.colorize=t.ensureTypedArg(e.colorize,r.BOOLEAN,!0),this.maxParticleCount=t.ensureTypedArg(e.maxParticleCount,r.NUMBER,null),this.blending=t.ensureTypedArg(e.blending,r.NUMBER,THREE.AdditiveBlending),this.transparent=t.ensureTypedArg(e.transparent,r.BOOLEAN,!0),this.alphaTest=parseFloat(t.ensureTypedArg(e.alphaTest,r.NUMBER,0)),this.depthWrite=t.ensureTypedArg(e.depthWrite,r.BOOLEAN,!1),this.depthTest=t.ensureTypedArg(e.depthTest,r.BOOLEAN,!0),this.fog=t.ensureTypedArg(e.fog,r.BOOLEAN,!0),this.scale=t.ensureTypedArg(e.scale,r.NUMBER,300),this.emitters=[],this.emitterIDs=[],this._pool=[],this._poolCreationSettings=null,this._createNewWhenPoolEmpty=0,this._attributesNeedRefresh=!1,this._attributesNeedDynamicReset=!1,this.particleCount=0,this.uniforms={tex:{type:"t",value:this.texture},textureAnimation:{type:"v4",value:new THREE.Vector4(this.textureFrames.x,this.textureFrames.y,this.textureFrameCount,Math.max(Math.abs(this.textureLoop),1))},fogColor:{type:"c",value:this.fog?new THREE.Color:null},fogNear:{type:"f",value:10},fogFar:{type:"f",value:200},fogDensity:{type:"f",value:.5},deltaTime:{type:"f",value:0},runTime:{type:"f",value:0},scale:{type:"f",value:this.scale}},this.defines={HAS_PERSPECTIVE:this.hasPerspective,COLORIZE:this.colorize,VALUE_OVER_LIFETIME_LENGTH:SPE.valueOverLifetimeLength,SHOULD_ROTATE_TEXTURE:!1,SHOULD_ROTATE_PARTICLES:!1,SHOULD_WIGGLE_PARTICLES:!1,SHOULD_CALCULATE_SPRITE:1<this.textureFrames.x||1<this.textureFrames.y},this.attributes={position:new SPE.ShaderAttribute("v3",!0),acceleration:new SPE.ShaderAttribute("v4",!0),velocity:new SPE.ShaderAttribute("v3",!0),rotation:new SPE.ShaderAttribute("v4",!0),rotationCenter:new SPE.ShaderAttribute("v3",!0),params:new SPE.ShaderAttribute("v4",!0),size:new SPE.ShaderAttribute("v4",!0),angle:new SPE.ShaderAttribute("v4",!0),color:new SPE.ShaderAttribute("v4",!0),opacity:new SPE.ShaderAttribute("v4",!0)},this.attributeKeys=Object.keys(this.attributes),this.attributeCount=this.attributeKeys.length,this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:SPE.shaders.vertex,fragmentShader:SPE.shaders.fragment,blending:this.blending,transparent:this.transparent,alphaTest:this.alphaTest,depthWrite:this.depthWrite,depthTest:this.depthTest,defines:this.defines,fog:this.fog}),this.geometry=new THREE.BufferGeometry,this.mesh=new THREE.Points(this.geometry,this.material),null===this.maxParticleCount&&console.warn("SPE.Group: No maxParticleCount specified. Adding emitters after rendering will probably cause errors.")},SPE.Group.constructor=SPE.Group,SPE.Group.prototype._updateDefines=function(){var e,t=this.emitters;let r=t.length-1;var i=this.defines;for(r;0<=r;--r)e=t[r],i.SHOULD_CALCULATE_SPRITE||(i.SHOULD_ROTATE_TEXTURE=i.SHOULD_ROTATE_TEXTURE||!!Math.max(Math.max.apply(null,e.angle.value),Math.max.apply(null,e.angle.spread))),i.SHOULD_ROTATE_PARTICLES=i.SHOULD_ROTATE_PARTICLES||!!Math.max(e.rotation.angle,e.rotation.angleSpread),i.SHOULD_WIGGLE_PARTICLES=i.SHOULD_WIGGLE_PARTICLES||!!Math.max(e.wiggle.value,e.wiggle.spread);this.material.needsUpdate=!0},SPE.Group.prototype._applyAttributesToGeometry=function(){var e,t,r,i=this.attributes,a=this.geometry,o=a.attributes;for(r in i)i.hasOwnProperty(r)&&(e=i[r],(t=o[r])?t.array=e.typedArray.array:a.setAttribute(r,e.bufferAttribute),e.bufferAttribute.needsUpdate=!0);this.geometry.setDrawRange(0,this.particleCount)},SPE.Group.prototype.addEmitter=function(t){if(t instanceof SPE.Emitter==!1)console.error("`emitter` argument must be instance of SPE.Emitter. Was provided with:",t);else if(-1<this.emitterIDs.indexOf(t.uuid))console.error("Emitter already exists in this group. Will not add again.");else{if(null===t.group){var e,r=this.attributes,i=this.particleCount,a=i+t.particleCount;for(e in this.particleCount=a,null!==this.maxParticleCount&&this.particleCount>this.maxParticleCount&&console.warn("SPE.Group: maxParticleCount exceeded. Requesting",this.particleCount,"particles, can support only",this.maxParticleCount),t._calculatePPSValue(t.maxAge._value+t.maxAge._spread),t._setBufferUpdateRanges(this.attributeKeys),t._setAttributeOffset(i),t.group=this,t.attributes=this.attributes,r)r.hasOwnProperty(e)&&r[e]._createBufferAttribute(null!==this.maxParticleCount?this.maxParticleCount:this.particleCount);for(let e=i;e<a;++e)t._assignPositionValue(e),t._assignForceValue(e,"velocity"),t._assignForceValue(e,"acceleration"),t._assignAbsLifetimeValue(e,"opacity"),t._assignAbsLifetimeValue(e,"size"),t._assignAngleValue(e),t._assignRotationValue(e),t._assignParamsValue(e),t._assignColorValue(e);return this._applyAttributesToGeometry(),this.emitters.push(t),this.emitterIDs.push(t.uuid),this._updateDefines(t),this.material.needsUpdate=!0,this.geometry.needsUpdate=!0,this._attributesNeedRefresh=!0,this}console.error("Emitter already belongs to another group. Will not add to requested group.")}},SPE.Group.prototype.removeEmitter=function(e){var t=this.emitterIDs.indexOf(e.uuid);if(e instanceof SPE.Emitter==!1)console.error("`emitter` argument must be instance of SPE.Emitter. Was provided with:",e);else if(-1===t)console.error("Emitter does not exist in this group. Will not remove.");else{var r,i=e.attributeOffset,a=i+e.particleCount,o=this.attributes.params.typedArray;for(let e=i;e<a;++e)o.array[4*e]=0,o.array[4*e+1]=0;for(r in this.emitters.splice(t,1),this.emitterIDs.splice(t,1),this.attributes)this.attributes.hasOwnProperty(r)&&this.attributes[r].splice(i,a);this.particleCount-=e.particleCount,e._onRemove(),this._attributesNeedRefresh=!0}},SPE.Group.prototype.getFromPool=function(){var e=this._pool,t=this._createNewWhenPoolEmpty;return e.length?e.pop():t?(e=new SPE.Emitter(this._poolCreationSettings),this.addEmitter(e),e):null},SPE.Group.prototype.releaseIntoPool=function(e){if(e instanceof SPE.Emitter!=!1)return e.reset(),this._pool.unshift(e),this;console.error("Argument is not instanceof SPE.Emitter:",e)},SPE.Group.prototype.getPool=function(){return this._pool},SPE.Group.prototype.addPool=function(t,r,e){let i;this._poolCreationSettings=r,this._createNewWhenPoolEmpty=!!e;for(let e=0;e<t;++e)i=Array.isArray(r)?new SPE.Emitter(r[e]):new SPE.Emitter(r),this.addEmitter(i),this.releaseIntoPool(i);return this},SPE.Group.prototype._triggerSingleEmitter=function(e){let t=this.getFromPool(),r=this;if(null!==t)return e instanceof THREE.Vector3&&(t.position.value.copy(e),t.position.value=t.position.value),t.enable(),setTimeout(function(){t.disable(),r.releaseIntoPool(t)},1e3*Math.max(t.duration,t.maxAge.value+t.maxAge.spread)),this;console.log("SPE.Group pool ran out.")},SPE.Group.prototype.triggerPoolEmitter=function(t,r){if("number"==typeof t&&1<t)for(let e=0;e<t;++e)this._triggerSingleEmitter(r);else this._triggerSingleEmitter(r);return this},SPE.Group.prototype._updateUniforms=function(e){this.uniforms.runTime.value+=e,this.uniforms.deltaTime.value=e},SPE.Group.prototype._resetBufferRanges=function(){var e=this.attributeKeys;let t=this.attributeCount-1;var r=this.attributes;for(t;0<=t;--t)r[e[t]].resetUpdateRange()},SPE.Group.prototype._updateBuffers=function(e){var t,r,i=this.attributeKeys,a=this.attributes,o=e.bufferUpdateRanges;for(let e=this.attributeCount-1;0<=e;--e)t=o[r=i[e]],(r=a[r]).setUpdateRange(t.min,t.max),r.flagUpdate()},SPE.Group.prototype.tick=function(e){var r=this.emitters,i=r.length,a=e||this.fixedTimeStep,t=this.attributeKeys,o=this.attributes;if(this._updateUniforms(a),this._resetBufferRanges(),0!==i||!1!==this._attributesNeedRefresh||!1!==this._attributesNeedDynamicReset){for(let e=0,t;e<i;++e)(t=r[e]).tick(a),this._updateBuffers(t);if(!0===this._attributesNeedDynamicReset){for(let e=this.attributeCount-1;0<=e;--e)o[t[e]].resetDynamic();this._attributesNeedDynamicReset=!1}if(!0===this._attributesNeedRefresh){for(let e=this.attributeCount-1;0<=e;--e)o[t[e]].forceUpdateAll();this._attributesNeedRefresh=!1,this._attributesNeedDynamicReset=!0}}},SPE.Group.prototype.dispose=function(){return this.geometry.dispose(),this.material.dispose(),this},SPE.Emitter=function(e){var t,r=SPE.utils,i=r.types,a=SPE.valueOverLifetimeLength;for(t in(e=r.ensureTypedArg(e,i.OBJECT,{})).position=r.ensureTypedArg(e.position,i.OBJECT,{}),e.velocity=r.ensureTypedArg(e.velocity,i.OBJECT,{}),e.acceleration=r.ensureTypedArg(e.acceleration,i.OBJECT,{}),e.radius=r.ensureTypedArg(e.radius,i.OBJECT,{}),e.drag=r.ensureTypedArg(e.drag,i.OBJECT,{}),e.rotation=r.ensureTypedArg(e.rotation,i.OBJECT,{}),e.color=r.ensureTypedArg(e.color,i.OBJECT,{}),e.opacity=r.ensureTypedArg(e.opacity,i.OBJECT,{}),e.size=r.ensureTypedArg(e.size,i.OBJECT,{}),e.angle=r.ensureTypedArg(e.angle,i.OBJECT,{}),e.wiggle=r.ensureTypedArg(e.wiggle,i.OBJECT,{}),e.maxAge=r.ensureTypedArg(e.maxAge,i.OBJECT,{}),e.onParticleSpawn&&console.warn("onParticleSpawn has been removed. Please set properties directly to alter values at runtime."),this.uuid=SPE.utils.generateUUID(),this.type=r.ensureTypedArg(e.type,i.NUMBER,SPE.distributions.BOX),this.position={_value:r.ensureInstanceOf(e.position.value,THREE.Vector3,new THREE.Vector3),_spread:r.ensureInstanceOf(e.position.spread,THREE.Vector3,new THREE.Vector3),_spreadClamp:r.ensureInstanceOf(e.position.spreadClamp,THREE.Vector3,new THREE.Vector3),_distribution:r.ensureTypedArg(e.position.distribution,i.NUMBER,this.type),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1),_radius:r.ensureTypedArg(e.position.radius,i.NUMBER,10),_radiusScale:r.ensureInstanceOf(e.position.radiusScale,THREE.Vector3,new THREE.Vector3(1,1,1)),_distributionClamp:r.ensureTypedArg(e.position.distributionClamp,i.NUMBER,0)},this.velocity={_value:r.ensureInstanceOf(e.velocity.value,THREE.Vector3,new THREE.Vector3),_spread:r.ensureInstanceOf(e.velocity.spread,THREE.Vector3,new THREE.Vector3),_distribution:r.ensureTypedArg(e.velocity.distribution,i.NUMBER,this.type),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)},this.acceleration={_value:r.ensureInstanceOf(e.acceleration.value,THREE.Vector3,new THREE.Vector3),_spread:r.ensureInstanceOf(e.acceleration.spread,THREE.Vector3,new THREE.Vector3),_distribution:r.ensureTypedArg(e.acceleration.distribution,i.NUMBER,this.type),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)},this.drag={_value:r.ensureTypedArg(e.drag.value,i.NUMBER,0),_spread:r.ensureTypedArg(e.drag.spread,i.NUMBER,0),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)},this.wiggle={_value:r.ensureTypedArg(e.wiggle.value,i.NUMBER,0),_spread:r.ensureTypedArg(e.wiggle.spread,i.NUMBER,0)},this.rotation={_axis:r.ensureInstanceOf(e.rotation.axis,THREE.Vector3,new THREE.Vector3(0,1,0)),_axisSpread:r.ensureInstanceOf(e.rotation.axisSpread,THREE.Vector3,new THREE.Vector3),_angle:r.ensureTypedArg(e.rotation.angle,i.NUMBER,0),_angleSpread:r.ensureTypedArg(e.rotation.angleSpread,i.NUMBER,0),_static:r.ensureTypedArg(e.rotation.static,i.BOOLEAN,!1),_center:r.ensureInstanceOf(e.rotation.center,THREE.Vector3,this.position._value.clone()),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)},this.maxAge={_value:r.ensureTypedArg(e.maxAge.value,i.NUMBER,2),_spread:r.ensureTypedArg(e.maxAge.spread,i.NUMBER,0)},this.color={_value:r.ensureArrayInstanceOf(e.color.value,THREE.Color,new THREE.Color),_spread:r.ensureArrayInstanceOf(e.color.spread,THREE.Vector3,new THREE.Vector3),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)},this.opacity={_value:r.ensureArrayTypedArg(e.opacity.value,i.NUMBER,1),_spread:r.ensureArrayTypedArg(e.opacity.spread,i.NUMBER,0),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)},this.size={_value:r.ensureArrayTypedArg(e.size.value,i.NUMBER,1),_spread:r.ensureArrayTypedArg(e.size.spread,i.NUMBER,0),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)},this.angle={_value:r.ensureArrayTypedArg(e.angle.value,i.NUMBER,0),_spread:r.ensureArrayTypedArg(e.angle.spread,i.NUMBER,0),_randomise:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)},this.particleCount=r.ensureTypedArg(e.particleCount,i.NUMBER,100),this.duration=r.ensureTypedArg(e.duration,i.NUMBER,null),this.isStatic=r.ensureTypedArg(e.isStatic,i.BOOLEAN,!1),this.activeMultiplier=r.ensureTypedArg(e.activeMultiplier,i.NUMBER,1),this.direction=r.ensureTypedArg(e.direction,i.NUMBER,1),this.alive=r.ensureTypedArg(e.alive,i.BOOLEAN,!0),this.particlesPerSecond=0,this.activationIndex=0,this.attributeOffset=0,this.attributeEnd=0,this.age=0,this.activeParticleCount=0,this.group=null,this.attributes=null,this.paramsArray=null,this.resetFlags={position:r.ensureTypedArg(e.position.randomise,i.BOOLEAN,!1)||r.ensureTypedArg(e.radius.randomise,i.BOOLEAN,!1),velocity:r.ensureTypedArg(e.velocity.randomise,i.BOOLEAN,!1),acceleration:r.ensureTypedArg(e.acceleration.randomise,i.BOOLEAN,!1)||r.ensureTypedArg(e.drag.randomise,i.BOOLEAN,!1),rotation:r.ensureTypedArg(e.rotation.randomise,i.BOOLEAN,!1),rotationCenter:r.ensureTypedArg(e.rotation.randomise,i.BOOLEAN,!1),size:r.ensureTypedArg(e.size.randomise,i.BOOLEAN,!1),color:r.ensureTypedArg(e.color.randomise,i.BOOLEAN,!1),opacity:r.ensureTypedArg(e.opacity.randomise,i.BOOLEAN,!1),angle:r.ensureTypedArg(e.angle.randomise,i.BOOLEAN,!1)},this.updateFlags={},this.updateCounts={},this.updateMap={maxAge:"params",position:"position",velocity:"velocity",acceleration:"acceleration",drag:"acceleration",wiggle:"params",rotation:"rotation",size:"size",color:"color",opacity:"opacity",angle:"angle"},this.updateMap)this.updateMap.hasOwnProperty(t)&&(this.updateCounts[this.updateMap[t]]=0,this.updateFlags[this.updateMap[t]]=!1,this._createGetterSetters(this[t],t));this.bufferUpdateRanges={},this.attributeKeys=null,this.attributeCount=0,r.ensureValueOverLifetimeCompliance(this.color,a,a),r.ensureValueOverLifetimeCompliance(this.opacity,a,a),r.ensureValueOverLifetimeCompliance(this.size,a,a),r.ensureValueOverLifetimeCompliance(this.angle,a,a)},SPE.Emitter.constructor=SPE.Emitter,SPE.Emitter.prototype._createGetterSetters=function(e,o){let n=this;for(var t in e){var r;e.hasOwnProperty(t)&&(r=t.replace("_",""),Object.defineProperty(e,r,{get:(e=>function(){return this[e]})(t),set:(a=>function(e){var t=n.updateMap[o],r=this[a],i=SPE.valueOverLifetimeLength;"_rotationCenter"===a?(n.updateFlags.rotationCenter=!0,n.updateCounts.rotationCenter=0):"_randomise"===a?n.resetFlags[t]=e:(n.updateFlags[t]=!0,n.updateCounts[t]=0),n.group._updateDefines(),this[a]=e,Array.isArray(r)&&SPE.utils.ensureValueOverLifetimeCompliance(n[o],i,i)})(t)}))}},SPE.Emitter.prototype._setBufferUpdateRanges=function(t){this.attributeKeys=t,this.attributeCount=t.length;for(let e=this.attributeCount-1;0<=e;--e)this.bufferUpdateRanges[t[e]]={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY}},SPE.Emitter.prototype._calculatePPSValue=function(e){var t=this.particleCount;this.duration?this.particlesPerSecond=t/(e<this.duration?e:this.duration):this.particlesPerSecond=t/e},SPE.Emitter.prototype._setAttributeOffset=function(e){this.attributeOffset=e,this.activationIndex=e,this.activationEnd=e+this.particleCount},SPE.Emitter.prototype._assignValue=function(e,t){switch(e){case"position":this._assignPositionValue(t);break;case"velocity":case"acceleration":this._assignForceValue(t,e);break;case"size":case"opacity":this._assignAbsLifetimeValue(t,e);break;case"angle":this._assignAngleValue(t);break;case"params":this._assignParamsValue(t);break;case"rotation":this._assignRotationValue(t);break;case"color":this._assignColorValue(t)}},SPE.Emitter.prototype._assignPositionValue=function(e){var t=SPE.distributions,r=SPE.utils,i=this.position,a=this.attributes.position,o=i._value,n=i._spread;switch(i._distribution){case t.BOX:r.randomVector3(a,e,o,n,i._spreadClamp);break;case t.SPHERE:r.randomVector3OnSphere(a,e,o,i._radius,i._spread.x,i._radiusScale,i._spreadClamp.x,i._distributionClamp||this.particleCount);break;case t.DISC:r.randomVector3OnDisc(a,e,o,i._radius,i._spread.x,i._radiusScale,i._spreadClamp.x);break;case t.LINE:r.randomVector3OnLine(a,e,o,n)}},SPE.Emitter.prototype._assignForceValue=function(e,t){var r=SPE.distributions,i=SPE.utils,a=this[t],o=a._value,n=a._spread;let s,u,l,p,c;switch(a._distribution){case r.BOX:i.randomVector3(this.attributes[t],e,o,n);break;case r.SPHERE:s=this.attributes.position.typedArray.array,c=3*e,u=s[c],l=s[c+1],p=s[c+2],i.randomDirectionVector3OnSphere(this.attributes[t],e,u,l,p,this.position._value,a._value.x,a._spread.x);break;case r.DISC:s=this.attributes.position.typedArray.array,c=3*e,u=s[c],l=s[c+1],p=s[c+2],i.randomDirectionVector3OnDisc(this.attributes[t],e,u,l,p,this.position._value,a._value.x,a._spread.x);break;case r.LINE:i.randomVector3OnLine(this.attributes[t],e,o,n)}"acceleration"===t&&(r=i.clamp(i.randomFloat(this.drag._value,this.drag._spread),0,1),this.attributes.acceleration.typedArray.array[4*e+3]=r)},SPE.Emitter.prototype._assignAbsLifetimeValue=function(e,t){var r,i=this.attributes[t].typedArray,t=this[t],a=SPE.utils;a.arrayValuesAreEqual(t._value)&&a.arrayValuesAreEqual(t._spread)?(r=Math.abs(a.randomFloat(t._value[0],t._spread[0])),i.setVec4Components(e,r,r,r,r)):i.setVec4Components(e,Math.abs(a.randomFloat(t._value[0],t._spread[0])),Math.abs(a.randomFloat(t._value[1],t._spread[1])),Math.abs(a.randomFloat(t._value[2],t._spread[2])),Math.abs(a.randomFloat(t._value[3],t._spread[3])))},SPE.Emitter.prototype._assignAngleValue=function(e){var t,r=this.attributes.angle.typedArray,i=this.angle,a=SPE.utils;a.arrayValuesAreEqual(i._value)&&a.arrayValuesAreEqual(i._spread)?(t=a.randomFloat(i._value[0],i._spread[0]),r.setVec4Components(e,t,t,t,t)):r.setVec4Components(e,a.randomFloat(i._value[0],i._spread[0]),a.randomFloat(i._value[1],i._spread[1]),a.randomFloat(i._value[2],i._spread[2]),a.randomFloat(i._value[3],i._spread[3]))},SPE.Emitter.prototype._assignParamsValue=function(e){this.attributes.params.typedArray.setVec4Components(e,this.isStatic?1:0,0,Math.abs(SPE.utils.randomFloat(this.maxAge._value,this.maxAge._spread)),SPE.utils.randomFloat(this.wiggle._value,this.wiggle._spread))},SPE.Emitter.prototype._assignRotationValue=function(e){this.attributes.rotation.typedArray.setVec3Components(e,SPE.utils.getPackedRotationAxis(this.rotation._axis,this.rotation._axisSpread),SPE.utils.randomFloat(this.rotation._angle,this.rotation._angleSpread),this.rotation._static?0:1),this.attributes.rotationCenter.typedArray.setVec3(e,this.rotation._center)},SPE.Emitter.prototype._assignColorValue=function(e){SPE.utils.randomColorAsHex(this.attributes.color,e,this.color._value,this.color._spread)},SPE.Emitter.prototype._resetParticle=function(t){var r,i,a=this.resetFlags,o=this.updateFlags,n=this.updateCounts,s=this.attributeKeys;for(let e=this.attributeCount-1;0<=e;--e)i=o[r=s[e]],!0!==a[r]&&!0!==i||(this._assignValue(r,t),this._updateAttributeUpdateRange(r,t),!0===i&&n[r]===this.particleCount?(o[r]=!1,n[r]=0):1==i&&++n[r])},SPE.Emitter.prototype._updateAttributeUpdateRange=function(e,t){e=this.bufferUpdateRanges[e];e.min=Math.min(t,e.min),e.max=Math.max(t,e.max)},SPE.Emitter.prototype._resetBufferRanges=function(){var t,r=this.bufferUpdateRanges,i=this.bufferUpdateKeys;this.bufferUpdateCount;for(let e;0<=e;--e)r[t=i[e]].min=Number.POSITIVE_INFINITY,r[t].max=Number.NEGATIVE_INFINITY},SPE.Emitter.prototype._onRemove=function(){this.particlesPerSecond=0,this.attributeOffset=0,this.activationIndex=0,this.activeParticleCount=0,this.group=null,this.attributes=null,this.paramsArray=null,this.age=0},SPE.Emitter.prototype._decrementParticleCount=function(){--this.activeParticleCount},SPE.Emitter.prototype._incrementParticleCount=function(){++this.activeParticleCount},SPE.Emitter.prototype._checkParticleAges=function(t,r,i,a){var o,n;let s,u;for(let e=r-1;e>=t;--e)o=4*e,0!==(u=i[o])&&(s=i[1+o],n=i[2+o],1===this.direction?(s+=a)>=n&&(s=0,u=0,this._decrementParticleCount()):(s-=a)<=0&&(s=n,u=0,this._decrementParticleCount()),i[o]=u,i[1+o]=s,this._updateAttributeUpdateRange("params",e))},SPE.Emitter.prototype._activateParticles=function(t,r,i,a){var o,n,s=this.direction;for(let e=t;e<r;++e)0!=i[o=4*e]&&1!==this.particleCount||(this._incrementParticleCount(),i[o]=1,this._resetParticle(e),n=a*(e-t),i[1+o]=-1===s?i[2+o]-n:n,this._updateAttributeUpdateRange("params",e))},SPE.Emitter.prototype.tick=function(e){var t,r,i,a,o,n,s;this.isStatic||(null===this.paramsArray&&(this.paramsArray=this.attributes.params.typedArray.array),r=(t=this.attributeOffset)+this.particleCount,i=this.paramsArray,a=this.particlesPerSecond*this.activeMultiplier*e,o=this.activationIndex,this._resetBufferRanges(),this._checkParticleAges(t,r,i,e),!1===this.alive?this.age=0:null!==this.duration&&this.age>this.duration?(this.alive=!1,this.age=0):(o=1===this.particleCount?o:0|o,s=(n=Math.min(o+a,this.activationEnd))-this.activationIndex|0,this._activateParticles(o,n,i,0<s?e/s:0),this.activationIndex+=a,this.activationIndex>r&&(this.activationIndex=t),this.age+=e))},SPE.Emitter.prototype.reset=function(t){if(this.age=0,!(this.alive=!1)===t){var r,i=this.attributeOffset,t=i+this.particleCount,a=this.paramsArray,e=this.attributes.params.bufferAttribute;for(let e=t-1;e>=i;--e)a[r=4*e]=0,a[1+r]=0;e.addUpdateRange.offset=0,e.addUpdateRange.count=-1,e.needsUpdate=!0}return this},SPE.Emitter.prototype.enable=function(){return this.alive=!0,this},SPE.Emitter.prototype.disable=function(){return this.alive=!1,this},SPE.Emitter.prototype.remove=function(){return null!==this.group?this.group.removeEmitter(this):console.error("Emitter does not belong to a group, cannot remove."),this};export default SPE;